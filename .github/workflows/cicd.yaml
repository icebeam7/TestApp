name: CI on Push and Pull Request

on: [push, pull_request]

jobs:
  iOS_Device:

    runs-on: macos-latest
    
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATES_P12 }}
        P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # create temporary keychain
        security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles   
        
    - name: iOS Device
      run: |
        nuget restore
        cd TestApp
        msBuild TestApp.iOS/TestApp.iOS.csproj /verbosity:normal /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true
        
    - uses: actions/upload-artifact@v2
      with:
        name: iOS Device App
        path: TestApp/TestApp.iOS/bin/iPhone/Debug/TestApp.iOS.ipa   

    - name: Setup App Center CLI
      run: npm install --location=global appcenter-cli
        
    - name: Upload Android App to App Center
      run: |
          appcenter distribute release --file ./TestApp/TestApp.iOS/bin/iPhone/Debug/TestApp.iOS.ipa --app icebeam/TestApp --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}
